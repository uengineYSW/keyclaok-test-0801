server:
  port: 8088

---

keycloak-client:
  server-url: 'http://localhost:9090'
  realm: master
spring:
  profiles: default
  cloud:
    gateway:
      routes:
        - id: hotel-reservation
          uri: 'http://localhost:8082'
          predicates:
            - Path=/hotels/**
        - id: hotel-management
          uri: 'http://localhost:8083'
          predicates:
            - Path=/hotelManagers/**
        - id: frontend
          uri: 'http://localhost:8080'
          predicates:
            - Path=/**
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - '*'
            allowedMethods:
              - '*'
            allowedHeaders:
              - '*'
            allowCredentials: true
            allowedOriginPatterns:
              - '*'
      default-filters:
        - TokenRelay
  config:
    activate:
      on-profile: default
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: '${keycloak-client.server-url}/realms/${keycloak-client.realm}'
            user-name-attribute: preferred_username
        registration:
          keycloak:
            client-id: <client-id>
            client-secret: null
            redirect-uri: gateway-path/login/oauth2/code/client-name
            authorization-grant-type: authorization_code
            scope: openid
      resourceserver:
        jwt:
          jwk-set-uri: >-
            ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs

---

server:
  port: 8080
spring:
  profiles: docker
  cloud:
    gateway:
      routes:
        - id: hotel-reservation
          uri: 'http://hotel-reservation:8080'
          predicates:
            - Path=/hotels/**
        - id: hotel-management
          uri: 'http://hotel-management:8080'
          predicates:
            - Path=/hotelManagers/**
        - id: frontend
          uri: 'http://frontend:8080'
          predicates:
            - Path=/**
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - '*'
            allowedMethods:
              - '*'
            allowedHeaders:
              - '*'
            allowCredentials: true
  config:
    activate:
      on-profile: docker
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: '${keycloak-client.server-url}/realms/${keycloak-client.realm}'
            user-name-attribute: preferred_username
        registration:
          keycloak:
            client-id: <client-id>
            client-secret: null
            redirect-uri: '{baseUrl}/login/oauth2/code/keycloak'
            authorization-grant-type: authorization_code
            scope: openid
      resourceserver:
        jwt:
          jwk-set-uri: >-
            ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs
